
R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### analysis-predictionNA-w12.R --- 
> ##----------------------------------------------------------------------
> ## Author: Brice Ozenne
> ## Created: mar  4 2022 (09:16) 
> ## Version: 
> ## Last-Updated: apr 21 2022 (16:03) 
> ##           By: Brice Ozenne
> ##     Update #: 56
> ##----------------------------------------------------------------------
> ## 
> ### Commentary: 
> ## 
> ### Change Log:
> ##----------------------------------------------------------------------
> ## 
> ### Code:
> 
> ## * Parameters
> n.resampling <- 100 ## 10000
> fold.size <- 0.1
> fold.repetition <- 50
> 
> iter_sim <- as.numeric(Sys.getenv("SLURM_ARRAY_TASK_ID"))
> n.iter_sim <- as.numeric(Sys.getenv("SLURM_ARRAY_TASK_COUNT"))
> if(is.na(iter_sim)){iter_sim <- 1}
> if(is.na(n.iter_sim)){n.iter_sim <- 10}
> 
> vec.resampling <- (1+n.resampling*(iter_sim-1)):(n.resampling*iter_sim)
> cat("iteration ",iter_sim," over ",n.iter_sim,"\n", sep = "")
iteration 1 over 10
> cat("vec.repetition:\n")
vec.repetition:
> print(vec.resampling)
  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18
 [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36
 [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54
 [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72
 [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90
 [91]  91  92  93  94  95  96  97  98  99 100
> cat("\n")

> 
> ## * Path
> if(system("whoami",intern=TRUE)=="hpl802"){
+     ## nothing: on the server
+     ## cd ucph/hdir/SundKonsolidering_BioStatHome/Cluster/BrainDrug-WP3/
+     ## setwd("h:/SundKonsolidering_BioStatHome/Cluster/BrainDrug-WP3/")
+     ## source("code-data-analysis/analysis-predictionNA-w12.R")
+ }else if(system("whoami",intern=TRUE)=="unicph\\hpl802"){
+     setwd("c:/Users/hpl802/Documents/Github/article-predictionNP1BD3/")
+ }else{ ## 
+     setwd("Vibeke put your path here")
+ }
NULL
> path.code <- "./code-data-analysis"
> 
> path.output <- "./output/"
> if(dir.exists(path.output)==FALSE){
+     dir.create(path.output)
+ }
> if(dir.exists(file.path(path.output,"analysis-predictionNA-w12"))==FALSE){
+     dir.create(file.path(path.output,"analysis-predictionNA-w12"))
+ }
> 
> path.results <- "./results/"
> if(dir.exists(path.results)==FALSE){
+     dir.create(path.results)
+ }
> if(dir.exists(file.path(path.results,"analysis-predictionNA-w12"))==FALSE){
+     dir.create(file.path(path.results,"analysis-predictionNA-w12"))
+ }
> 
> ## * Packages and function
> library(data.table)
> setDTthreads(1)
> library(pROC)
Type 'citation("pROC")' for a citation.

Attaching package: ‘pROC’

The following objects are masked from ‘package:stats’:

    cov, smooth, var

> library(ranger)
> library(splines)
> library(BuyseTest)
Loading required package: Rcpp
BuyseTest version 2.3.12

Attaching package: ‘BuyseTest’

The following object is masked from ‘package:pROC’:

    auc

> library(mice)

Attaching package: ‘mice’

The following object is masked from ‘package:stats’:

    filter

The following objects are masked from ‘package:base’:

    cbind, rbind

> ## devtools::install_github("NightingaleHealth/ggforestplot")
> 
> ## * Load data
> source(file.path(path.code,"0-data-management.R"))
Data management 

> 
> name.predictor <- c("sex","age","MR_OFCthick","HAMD17","hsCRP","lvpet","cognitive_cluster","EEG_vigilance","CATS_scoretotal","CAR_AUCi","neuroticism")
> nameT.predictor <- c("MR_OFCthick","HAMD17","hsCRP","lvpet","cognitive_cluster","EEG_vigilance","CATS_scoretotal","CAR_AUCi","neuroticism")
> nameR.predictor <- c("female","age","MR_OFCthick","HAMD17","low_hsCRP","lvpet","cognitive_cluster2","cognitive_cluster3","EEG_vigilance")
> nameRT.predictor <- c("MR_OFCthick","HAMD17","low_hsCRP","lvpet","cognitive_cluster2","cognitive_cluster3","EEG_vigilance")
> 
> ## * Missing values
> 
> dfWR.NP1_w12 <- dfWR.NP1[rowSums(is.na(dfWR.NP1[,.SD,.SDcols = c("Y_w12")]))==0,]
> ## butils::DIM(dfWR.NP1_w12)
> ## [1] 87 36
> 
> ## ** week 4
> set.seed(10)
> 
> ## *** fit models
> e.glm0_impw12 <- glm(Y_w12 ~ female + age, family = binomial(link = "logit"), data = dfWR.NP1_w12)
> ## e.glm_impw12 <- miss.glm(Y_w12 ~ female + age + MR_OFCthick + HAMD17 + low_hsCRP + lvpet + cognitive_cluster2 + cognitive_cluster3 + EEG_vigilance + CATS_scoretotal + CAR_AUCi + neuroticism, data = dfWR.NP1_w12,
> ##                  control = list(print_iter = FALSE, tol_em = 1e-5, ll_obs_cal = FALSE))
> e.glm_impw12 <- glm(Y_w12 ~ female + age + MR_OFCthick + HAMD17 + low_hsCRP + lvpet + cognitive_cluster2 + cognitive_cluster3 + EEG_vigilance + CATS_scoretotal + CAR_AUCi + neuroticism,
+                    family = binomial(link = "logit"), data = dfWR.NP1_w12)
> e.ranger_impw12 <- ranger(formula = Y_w12 ~ female + age + MR_OFCthick + HAMD17 + low_hsCRP + lvpet + cognitive_cluster2 + cognitive_cluster3 + EEG_vigilance + CATS_scoretotal + CAR_AUCi + neuroticism,
+                          data = na.omit(dfWR.NP1_w12), probability = TRUE)
> 
> ## e.glm0_impw12 <- glm(Y_w12 ~ female + age, family = binomial(link = "logit"), data = dfWR.NP1_w12)
> ## e.glm_impw12 <- glm(Y_w12 ~ female + age + MR_OFCthick + HAMD17 + low_hsCRP + lvpet + cognitive_cluster2 + cognitive_cluster3 + EEG_vigilance,
> ##                    family = binomial(link = "logit"), data = dfWR.NP1_w12)
> ## e.ranger_impw12 <- ranger(formula = Y_w12 ~ female + age + MR_OFCthick + HAMD17 + low_hsCRP + lvpet + cognitive_cluster2 + cognitive_cluster3 + EEG_vigilance,
> ##                          data = na.omit(dfWR.NP1_w12), probability = TRUE)
> 
> ## *** assess performance
> if(iter_sim==1){
+     ePerf.impw12.IF <- performance(list(glm0_impw12 = e.glm0_impw12, glm_impw12 = e.glm_impw12, rf_impw12 = e.ranger_impw12), data = dfWR.NP1_w12,
+                                    fold.repetition = fold.repetition, fold.balance = TRUE, fold.size = fold.size,
+                                    individual.fit = TRUE, impute = "mean",
+                                    conf.level = 0.95, seed = 10)
+     saveRDS(ePerf.impw12.IF, file = file.path(path.results,"perf-imp-week12-IF.rds"))
+     ePerf.impw12.IF
+ }
The training set seems to differ in size between models: 86, 50, 1. 

    Assessment of the predictive performance of 3 models

- Prediction: internal
              10 folds cross-validation repeated 50 times 
  |                                                                              |                                                                      |   0%  |                                                                              |=                                                                     |   2%  |                                                                              |===                                                                   |   4%  |                                                                              |====                                                                  |   6%  |                                                                              |======                                                                |   8%  |                                                                              |=======                                                               |  10%  |                                                                              |========                                                              |  12%  |                                                                              |==========                                                            |  14%  |                                                                              |===========                                                           |  16%  |                                                                              |=============                                                         |  18%  |                                                                              |==============                                                        |  20%  |                                                                              |===============                                                       |  22%  |                                                                              |=================                                                     |  24%  |                                                                              |==================                                                    |  26%  |                                                                              |====================                                                  |  28%  |                                                                              |=====================                                                 |  30%  |                                                                              |======================                                                |  32%  |                                                                              |========================                                              |  34%  |                                                                              |=========================                                             |  36%  |                                                                              |===========================                                           |  38%  |                                                                              |============================                                          |  40%  |                                                                              |=============================                                         |  42%  |                                                                              |===============================                                       |  44%  |                                                                              |================================                                      |  46%  |                                                                              |==================================                                    |  48%  |                                                                              |===================================                                   |  50%  |                                                                              |====================================                                  |  52%  |                                                                              |======================================                                |  54%  |                                                                              |=======================================                               |  56%  |                                                                              |=========================================                             |  58%  |                                                                              |==========================================                            |  60%  |                                                                              |===========================================                           |  62%  |                                                                              |=============================================                         |  64%  |                                                                              |==============================================                        |  66%  |                                                                              |================================================                      |  68%  |                                                                              |=================================================                     |  70%  |                                                                              |==================================================                    |  72%  |                                                                              |====================================================                  |  74%  |                                                                              |=====================================================                 |  76%  |                                                                              |=======================================================               |  78%  |                                                                              |========================================================              |  80%  |                                                                              |=========================================================             |  82%  |                                                                              |===========================================================           |  84%  |                                                                              |============================================================          |  86%  |                                                                              |==============================================================        |  88%  |                                                                              |===============================================================       |  90%  |                                                                              |================================================================      |  92%  |                                                                              |==================================================================    |  94%  |                                                                              |===================================================================   |  96%  |                                                                              |===================================================================== |  98%  |                                                                              |======================================================================| 100%
- Performance: internal(done) CV(done)
     method metric       model estimate      se  lower  upper p.value
1  internal    auc glm0_impw12   0.6603 0.06213 0.5234 0.7663  0.0237
2  internal    auc  glm_impw12   0.7929 0.05307 0.6647 0.8765  <0.001
3  internal    auc   rf_impw12   1.0000 0.00000 1.0000 1.0000  <0.001
4  internal  brier glm0_impw12   0.1958 0.01946 0.1611 0.2379        
5  internal  brier  glm_impw12   0.1599 0.02172 0.1226 0.2087        
6  internal  brier   rf_impw12   0.0724 0.00783 0.0586 0.0895        
7        cv    auc glm0_impw12   0.6219 0.06359 0.4847 0.7324  0.0791
8        cv    auc  glm_impw12   0.6174 0.06531 0.4765 0.7307  0.0982
9        cv    auc   rf_impw12   0.6347 0.06038 0.5040 0.7396  0.0438
10       cv  brier glm0_impw12   0.2039 0.02050 0.1675 0.2484        
11       cv  brier  glm_impw12   0.2267 0.02854 0.1771 0.2901        
12       cv  brier   rf_impw12   0.2029 0.02096 0.1657 0.2485        
   p.value_comp
1              
2        0.0381
3        <0.001
4              
5        0.0357
6        <0.001
7              
8        0.9468
9        0.6945
10             
11       0.2848
12       0.1635
> 
> ePerf.impw12.perm <- performanceResample(list(glm0_impw12 = e.glm0_impw12, glm_impw12 = e.glm_impw12, rf_impw12 = e.ranger_impw12), data = dfWR.NP1_w12,
+                                          fold.repetition = fold.repetition, fold.balance = TRUE, fold.size = fold.size,
+                                          individual.fit = TRUE, impute = "mean",
+                                          type.resampling = "permutation", n.resampling = vec.resampling, seed = 10,
+                                          filename = file.path(path.results,"analysis-predictionNA-w12",paste0("iter",iter_sim,"-tempo")))
                                                                                                     > saveRDS(ePerf.impw12.perm, file = file.path(path.results,"analysis-predictionNA-w12",paste0("iter",iter_sim,"-final.rds")))
> ePerf.impw12.perm
     method metric       model estimate resample se.resample p.value
1  internal    auc glm0_impw12   0.6603   0.5783    0.056027  0.0693
2  internal    auc  glm_impw12   0.7929   0.7278    0.052439  0.1188
3  internal    auc   rf_impw12   1.0000   0.9998    0.000398  0.8416
4        cv    auc glm0_impw12   0.6219   0.4551    0.097497  0.0594
5        cv    auc  glm_impw12   0.6174   0.4881    0.095703  0.1089
6        cv    auc   rf_impw12   0.6347   0.5024    0.087250  0.0594
7  internal  brier glm0_impw12   0.1958   0.2058    0.006134  0.0990
8  internal  brier  glm_impw12   0.1599   0.1795    0.013570  0.0891
9  internal  brier   rf_impw12   0.0724   0.0794    0.005114  0.1287
10       cv  brier glm0_impw12   0.2039   0.2174    0.006672  0.0594
11       cv  brier  glm_impw12   0.2267   0.2538    0.015616  0.0792
12       cv  brier   rf_impw12   0.2029   0.2257    0.013712  0.0594
   p.value_comp
1              
2         0.624
3         0.891
4              
5         0.960
6         0.782
7              
8         0.228
9         0.851
10             
11        0.842
12        0.624
> 
> ## * sessionInfo
> sessionInfo()
R version 4.1.2 (2021-11-01)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Red Hat Enterprise Linux 8.5 (Ootpa)

Matrix products: default
BLAS:   /opt/software/R/4.1.2/lib64/R/lib/libRblas.so
LAPACK: /opt/software/R/4.1.2/lib64/R/lib/libRlapack.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] splines   stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
[1] lava_1.6.10       pbapply_1.5-0     mice_3.14.0       BuyseTest_2.3.12 
[5] Rcpp_1.0.8.3      ranger_0.13.1     pROC_1.18.0       data.table_1.14.2

loaded via a namespace (and not attached):
 [1] pillar_1.7.0       compiler_4.1.2     plyr_1.8.6         tools_4.1.2       
 [5] digest_0.6.29      lifecycle_1.0.1    tibble_3.1.6       gtable_0.3.0      
 [9] lattice_0.20-45    pkgconfig_2.0.3    rlang_1.0.2        Matrix_1.3-4      
[13] cli_3.2.0          parallel_4.1.2     SparseM_1.81       prodlim_2019.11.13
[17] withr_2.5.0        dplyr_1.0.8        MatrixModels_0.5-0 generics_0.1.2    
[21] vctrs_0.4.1        globals_0.14.0     stats4_4.1.2       grid_4.1.2        
[25] tidyselect_1.1.2   glue_1.6.2         listenv_0.8.0      R6_2.5.1          
[29] future.apply_1.8.1 fansi_1.0.3        parallelly_1.31.0  survival_3.2-13   
[33] tidyr_1.2.0        ggplot2_3.3.5      purrr_0.3.4        magrittr_2.0.3    
[37] backports_1.4.1    scales_1.2.0       codetools_0.2-18   ellipsis_0.3.2    
[41] future_1.24.0      colorspace_2.0-3   utf8_1.2.2         munsell_0.5.0     
[45] broom_0.7.12       crayon_1.5.1      
> 
> 
> 
> ##----------------------------------------------------------------------
> ### analysis-predictionNA-w12.R ends here
> 
> proc.time()
    user   system  elapsed 
26087.28 32867.21 57688.72 
