
R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### analysis-predictionNA-w8.R --- 
> ##----------------------------------------------------------------------
> ## Author: Brice Ozenne
> ## Created: mar  4 2022 (09:16) 
> ## Version: 
> ## Last-Updated: mar 18 2022 (18:16) 
> ##           By: Brice Ozenne
> ##     Update #: 32
> ##----------------------------------------------------------------------
> ## 
> ### Commentary: 
> ## 
> ### Change Log:
> ##----------------------------------------------------------------------
> ## 
> ### Code:
> 
> ## * Parameters
> n.resampling <- 2500
> fold.number <- 25
> 
> ## * Path
> if(system("whoami",intern=TRUE)=="hpl802"){
+     ## nothing: on the server
+     ## cd ucph/hdir/SundKonsolidering_BioStatHome/Cluster/BrainDrug-WP3/
+     ## source("code-data-analysis/analysis-predictionNA-w8.R")
+ }else if(system("whoami",intern=TRUE)=="unicph\\hpl802"){
+     setwd("c:/Users/hpl802/Documents/Github/article-predictionNP1BD3/")
+ }else{ ## 
+     setwd("Vibeke put your path here")
+ }
NULL
> path.code <- "./code-data-analysis"
> path.results <- "./results"
> 
> ## * Packages and function
> library(data.table)
> setDTthreads(1)
> library(pROC)
Type 'citation("pROC")' for a citation.

Attaching package: ‘pROC’

The following objects are masked from ‘package:stats’:

    cov, smooth, var

> library(ranger)
> library(splines)
> library(BuyseTest)
Loading required package: Rcpp
BuyseTest version 2.3.11

Attaching package: ‘BuyseTest’

The following object is masked from ‘package:pROC’:

    auc

> library(mice)

Attaching package: ‘mice’

The following object is masked from ‘package:stats’:

    filter

The following objects are masked from ‘package:base’:

    cbind, rbind

> library(misaem)
> ## devtools::install_github("NightingaleHealth/ggforestplot")
> 
> ## * Load data
> source(file.path(path.code,"0-data-management.R"))
Data management 

> 
> name.predictor <- c("sex","age","MR_OFCthick","HAMD17","hsCRP","lvpet","cognitive_cluster","EEG_vigilance","CATS_scoretotal","CAR_AUCi","neuroticism")
> nameT.predictor <- c("MR_OFCthick","HAMD17","hsCRP","lvpet","cognitive_cluster","EEG_vigilance","CATS_scoretotal","CAR_AUCi","neuroticism")
> nameR.predictor <- c("female","age","MR_OFCthick","HAMD17","low_hsCRP","lvpet","cognitive_cluster2","cognitive_cluster3","EEG_vigilance")
> nameRT.predictor <- c("MR_OFCthick","HAMD17","low_hsCRP","lvpet","cognitive_cluster2","cognitive_cluster3","EEG_vigilance")
> 
> ## * Missing values
> 
> dfWR.NP1_w8 <- dfWR.NP1[rowSums(is.na(dfWR.NP1[,.SD,.SDcols = c("Y_w8")]))==0,]
> ## butils::DIM(dfWR.NP1_w8)
> ## [1] 87 36
> 
> ## ** week 4
> set.seed(10)
> 
> ## *** fit models
> e.glm0_impw8 <- glm(Y_w8 ~ female + age, family = binomial(link = "logit"), data = dfWR.NP1_w8)
> ## e.glm_impw8 <- miss.glm(Y_w8 ~ female + age + MR_OFCthick + HAMD17 + low_hsCRP + lvpet + cognitive_cluster2 + cognitive_cluster3 + EEG_vigilance + CATS_scoretotal + CAR_AUCi + neuroticism, data = dfWR.NP1_w8,
> ##                  control = list(print_iter = FALSE, tol_em = 1e-5, ll_obs_cal = FALSE))
> e.glm_impw8 <- glm(Y_w8 ~ female + age + MR_OFCthick + HAMD17 + low_hsCRP + lvpet + cognitive_cluster2 + cognitive_cluster3 + EEG_vigilance + CATS_scoretotal + CAR_AUCi + neuroticism,
+                    family = binomial(link = "logit"), data = dfWR.NP1_w8)
> e.ranger_impw8 <- ranger(formula = Y_w8 ~ female + age + MR_OFCthick + HAMD17 + low_hsCRP + lvpet + cognitive_cluster2 + cognitive_cluster3 + EEG_vigilance + CATS_scoretotal + CAR_AUCi + neuroticism,
+                          data = na.omit(dfWR.NP1_w8), probability = TRUE)
> 
> ## e.glm0_impw8 <- glm(Y_w8 ~ female + age, family = binomial(link = "logit"), data = dfWR.NP1_w8)
> ## e.glm_impw8 <- glm(Y_w8 ~ female + age + MR_OFCthick + HAMD17 + low_hsCRP + lvpet + cognitive_cluster2 + cognitive_cluster3 + EEG_vigilance,
> ##                    family = binomial(link = "logit"), data = dfWR.NP1_w8)
> ## e.ranger_impw8 <- ranger(formula = Y_w8 ~ female + age + MR_OFCthick + HAMD17 + low_hsCRP + lvpet + cognitive_cluster2 + cognitive_cluster3 + EEG_vigilance,
> ##                          data = na.omit(dfWR.NP1_w8), probability = TRUE)
> 
> ## *** assess performance
> ePerf.impw8 <- performanceResample(list(glm0_impw8 = e.glm0_impw8, glm_impw8 = e.glm_impw8, rf_impw8 = e.ranger_impw8), data = dfWR.NP1_w8,
+                                    individual.fit = TRUE,
+                                    fold.number = fold.number, fold.size = 0.1,
+                                    type.resampling = "permutation", n.resampling = n.resampling, seed = 10,
+                                    filename = file.path(path.results,"analysis-predictionNA","perf-imp-week8"))
There were 50 or more warnings (use warnings() to see the first 50)
> ePerf.impw8
   metric      model  estimate se lower upper    p.value p.value_comp
1:    auc glm0_impw8 0.5128125 NA    NA    NA 0.16200000           NA
2:    auc  glm_impw8 0.6426823 NA    NA    NA 0.01083467           NA
3:    auc   rf_impw8 0.4616250 NA    NA    NA 0.59520000           NA
4:  brier glm0_impw8 0.2585633 NA    NA    NA 0.35160000           NA
5:  brier  glm_impw8 0.3107680 NA    NA    NA 0.15770465           NA
6:  brier   rf_impw8 0.2743862 NA    NA    NA 0.57720000           NA
> 
> ##    metric      model  estimate se lower upper p.value p.value_comp
> ## 1:    auc glm0_impw8 0.4935480 NA    NA    NA     1.0           NA
> ## 2:    auc  glm_impw8 0.5544182 NA    NA    NA     0.0           NA
> ## 3:    auc   rf_impw8 0.5106153 NA    NA    NA     0.3           NA
> ## 4:  brier glm0_impw8 0.2548968 NA    NA    NA     1.0           NA
> ## 5:  brier  glm_impw8 0.3557607 NA    NA    NA     0.9           NA
> ## 6:  brier   rf_impw8 0.2613369 NA    NA    NA     0.3           NA
> 
> ## * Export
> saveRDS(ePerf.impw8, file = file.path(path.results,"perf-imp-week8.rds"))
> 
> 
> 
> 
> 
> ## * Bonus
> if(FALSE){
+ 
+     xxx <- misaem::miss.glm(Y_w8 ~ female + age + MR_OFCthick + HAMD17 + low_hsCRP + lvpet + cognitive_cluster2 + cognitive_cluster3 + EEG_vigilance + CATS_scoretotal + CAR_AUCi + neuroticism, data = dfWR.NP1_w8,
+                             control = list(print_iter = FALSE, tol_em = 1e-5, ll_obs_cal = FALSE))
+ 
+ 
+     ePerf.impw8.bis <- performance(list(glm0_impw8 = e.glm0_impw8, glm_impw8 = xxx, rf_impw8 = e.ranger_impw8), data = dfWR.NP1_w8,
+                                    individual.fit = TRUE,
+                                    fold.number = 1, fold.size = 0.1, seed = 10)
+ 
+     ePerf.impw8.bis <- performance(list(glm0_impw8 = e.glm0_impw8, glm_impw8 = e.glm_impw8, rf_impw8 = e.ranger_impw8), data = dfWR.NP1_w8,
+                                    individual.fit = TRUE,
+                                    fold.number = 1, fold.size = 0.1, seed = 10)
+ 
+ 
+     ePerf.impw8.bis <- performance(list(glm2_impw8 = xxx, rf_impw8 = e.ranger_impw8), data = dfWR.NP1_w8,
+                                    individual.fit = TRUE,
+                                    fold.number = 1, fold.size = 0.1, seed = 10)
+ 
+ 
+     
+     for(iSplit in 1:10){ ## iSplit <- 3
+         test1 <- prediction[index[,"split"]==iSplit,"glm0_impw8"]
+         GS1 <- predict(update(e.glm0_impw8, data = dfWR.NP1_w8[index[index[,"split"]!=iSplit,"observation"],]),
+                        newdata = dfWR.NP1_w8[index[index[,"split"]==iSplit,"observation"],],
+                        type = "response")
+         print(range(test1-GS1))
+         ## test - dfWR.NP1_w8[index[index[,"split"]==iSplit,"observation"], Y_w8]
+ 
+     }
+ 
+     dataSplit <- dfWR.NP1_w8[index[index[,"split"]==iSplit,"observation"],]
+     GS2 <- NULL
+     for(iData in 1:NROW(dataSplit)){ ## iData <- 1
+         test.NA <- unlist(lapply(as.list(dataSplit[iData,.SD, .SDcols = all.vars(formula(e.glm_impw8))]), is.na))
+         rm.var <- names(which(test.NA))
+ 
+         fff <- formula(e.glm_impw8)
+         if(length(rm.var)>0){
+             fff <- update(fff, paste0(".~.-", paste0(rm.var, collapse = "-")))
+         }
+ 
+ 
+         
+         xxx <- miss.glm(fff, data = dfWR.NP1_w8[index[index[,"split"]!=iSplit,"observation"],],
+                         control = list(print_iter = FALSE, tol_em = 1e-5, ll_obs_cal = FALSE))
+         lava::expit(as.double(model.matrix(fff, dataSplit[iData,]) %*% coef(xxx)))
+         
+         
+         GS2 <- c(GS2,predict(update(e.glm_impw8, data = dfWR.NP1_w8[index[index[,"split"]!=iSplit,"observation"],],
+                                   formula = fff),
+                            newdata = dataSplit[iData,],
+                            type = "response"))
+     }
+     test2 <- prediction[index[,"split"]==iSplit,"glm_impw8"]
+     print(range(GS2 - test2))
+     ## test2 - dfWR.NP1_w8[index[index[,"split"]==iSplit,"observation"], Y_w8]
+     mean((test1 - dfWR.NP1_w8[index[index[,"split"]==iSplit,"observation"], Y_w8])^2)
+     mean((test2 - dfWR.NP1_w8[index[index[,"split"]==iSplit,"observation"], Y_w8])^2)
+ }
> 
> ##----------------------------------------------------------------------
> ### analysis-predictionNA-w8.R ends here
> 
> proc.time()
     user    system   elapsed 
138626.18  92257.99 153088.32 
