
R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### analysis-predictionCC-w12.R --- 
> ##----------------------------------------------------------------------
> ## Author: Brice Ozenne
> ## Created: dec  1 2021 (13:12) 
> ## Version: 
> ## Last-Updated: apr 21 2022 (16:03) 
> ##           By: Brice Ozenne
> ##     Update #: 175
> ##----------------------------------------------------------------------
> ## 
> ### Commentary: 
> ## 
> ### Change Log:
> ##----------------------------------------------------------------------
> ## 
> ### Code:
> 
> ## * Parameters
> n.resampling <- 100 ## 10000
> fold.size <- 0.1
> fold.repetition <- 50
> 
> 
> iter_sim <- as.numeric(Sys.getenv("SLURM_ARRAY_TASK_ID"))
> n.iter_sim <- as.numeric(Sys.getenv("SLURM_ARRAY_TASK_COUNT"))
> if(is.na(iter_sim)){iter_sim <- 1}
> if(is.na(n.iter_sim)){n.iter_sim <- 10}
> 
> vec.resampling <- (1+n.resampling*(iter_sim-1)):(n.resampling*iter_sim)
> cat("iteration ",iter_sim," over ",n.iter_sim,"\n", sep = "")
iteration 9 over 10
> cat("vec.repetition:\n")
vec.repetition:
> print(vec.resampling)
  [1] 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818
 [19] 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836
 [37] 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854
 [55] 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872
 [73] 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890
 [91] 891 892 893 894 895 896 897 898 899 900
> cat("\n")

> 
> ## * Path
> if(system("whoami",intern=TRUE)=="hpl802"){
+     ## nothing: on the server
+     ## cd ucph/hdir/SundKonsolidering_BioStatHome/Cluster/BrainDrug-WP3/
+     ## setwd("h:/SundKonsolidering_BioStatHome/Cluster/BrainDrug-WP3/")
+     ## source("code-data-analysis/analysis-predictionCC-w12.R")
+ }else if(system("whoami",intern=TRUE)=="unicph\\hpl802"){
+     setwd("c:/Users/hpl802/Documents/Github/article-predictionNP1BD3/")
+ }else{ ## 
+     setwd("Vibeke put your path here")
+ }
NULL
> path.code <- "./code-data-analysis"
> 
> path.output <- "./output/"
> if(dir.exists(path.output)==FALSE){
+     dir.create(path.output)
+ }
> if(dir.exists(file.path(path.output,"analysis-predictionCC-w12"))==FALSE){
+     dir.create(file.path(path.output,"analysis-predictionCC-w12"))
+ }
> 
> path.results <- "./results/"
> if(dir.exists(path.results)==FALSE){
+     dir.create(path.results)
+ }
> if(dir.exists(file.path(path.results,"analysis-predictionCC-w12"))==FALSE){
+     dir.create(file.path(path.results,"analysis-predictionCC-w12"))
+ }
> 
> ## * Packages and function
> library(data.table)
> setDTthreads(1)
> library(pROC)
Type 'citation("pROC")' for a citation.

Attaching package: ‘pROC’

The following objects are masked from ‘package:stats’:

    cov, smooth, var

> library(ranger)
> library(splines)
> library(BuyseTest)
Loading required package: Rcpp
BuyseTest version 2.3.12

Attaching package: ‘BuyseTest’

The following object is masked from ‘package:pROC’:

    auc

> library(mice)

Attaching package: ‘mice’

The following object is masked from ‘package:stats’:

    filter

The following objects are masked from ‘package:base’:

    cbind, rbind

> ## devtools::install_github("NightingaleHealth/ggforestplot")
> 
> ## * Load data
> source(file.path(path.code,"0-data-management.R"))
Data management 

> 
> name.predictor <- c("sex","age","MR_OFCthick","HAMD17","hsCRP","lvpet","cognitive_cluster","EEG_vigilance","CATS_scoretotal","CAR_AUCi","neuroticism")
> nameT.predictor <- c("MR_OFCthick","HAMD17","hsCRP","lvpet","cognitive_cluster","EEG_vigilance","CATS_scoretotal","CAR_AUCi","neuroticism")
> nameR.predictor <- c("female","age","MR_OFCthick","HAMD17","low_hsCRP","lvpet","cognitive_cluster2","cognitive_cluster3","EEG_vigilance")
> nameRT.predictor <- c("MR_OFCthick","HAMD17","low_hsCRP","lvpet","cognitive_cluster2","cognitive_cluster3","EEG_vigilance")
> 
> ## * Complete data
> 
> ## ** week 12
> 
> dfWR.NP1_ccw12 <- dfWR.NP1[rowSums(is.na(dfWR.NP1[,.SD,.SDcols = c("Y_w12",nameR.predictor)]))==0,]
> 
> ## *** fit models
> ff_ccw12 <- Y_w12 ~ female + age + MR_OFCthick + HAMD17 + low_hsCRP + lvpet + cognitive_cluster2 + cognitive_cluster3 + EEG_vigilance
> 
> e.glm0_ccw12 <- glm(Y_w12 ~ female + age, data = dfWR.NP1_ccw12, family = binomial(link = "logit"))
> e.glm_ccw12 <- glm(ff_ccw12, data = dfWR.NP1_ccw12, family = binomial(link = "logit"))
> e.ranger_ccw12 <- ranger(formula = ff_ccw12, data = dfWR.NP1_ccw12, probability = TRUE)
> 
> ## *** assess performance
> if(iter_sim==1){
+     ePerf.ccw12.IF <- performance(list(glm0_ccw12 = e.glm0_ccw12, glm_ccw12 = e.glm_ccw12, rf_ccw12 = e.ranger_ccw12), data = dfWR.NP1_ccw12,
+                                   fold.repetition = fold.repetition, fold.balance = TRUE, fold.size = fold.size, conf.level = 0.95, seed = 10)
+     saveRDS(ePerf.ccw12.IF, file = file.path(path.results,"perf-cc-week12-IF.rds"))
+     ePerf.ccw12.IF
+ }
> ##      method metric      model estimate      se  lower  upper p.value p.value_comp
> ## 1  internal    auc glm0_ccw12   0.6602 0.06467 0.5172 0.7699 0.02982             
> ## 2  internal    auc  glm_ccw12   0.7552 0.05802 0.6188 0.8486 < 0.001       0.1396
> ## 3  internal    auc   rf_ccw12   1.0000 0.00000 1.0000 1.0000 < 0.001       <0.001
> ## 4  internal  brier glm0_ccw12   0.1939 0.02046 0.1577 0.2385                     
> ## 5  internal  brier  glm_ccw12   0.1699 0.02271 0.1307 0.2207               0.1276
> ## 6  internal  brier   rf_ccw12   0.0686 0.00823 0.0543 0.0868               <0.001
> ## 7        cv    auc glm0_ccw12   0.6109 0.06671 0.4673 0.7267 0.12371             
> ## 8        cv    auc  glm_ccw12   0.5859 0.06951 0.4378 0.7074 0.24208       0.7048
> ## 9        cv    auc   rf_ccw12   0.7026 0.05817 0.5718 0.8002 0.00402       0.0343
> ## 10       cv  brier glm0_ccw12   0.2040 0.02171 0.1656 0.2513                     
> ## 11       cv  brier  glm_ccw12   0.2273 0.02907 0.1769 0.2921               0.2231
> ## 12       cv  brier   rf_ccw12   0.1914 0.02184 0.1531 0.2394               0.0251
> 
> ## beta <- c(ePerf.ccw12.IF$auc$cv$glm0_ccw12[ePerf.ccw12.IF$auc$cv$glm0_ccw12$fold=="global","estimate"],
> ##           ePerf.ccw12.IF$auc$cv$glm_ccw12[ePerf.ccw12.IF$auc$cv$glm_ccw12$fold=="global","estimate"],
> ##           ePerf.ccw12.IF$auc$cv$rf_ccw12[ePerf.ccw12.IF$auc$cv$rf_ccw12$fold=="global","estimate"])
> ## Sigma <- crossprod(ePerf.ccw12.IF$iid.auc$cv)
> ## C1 <- rbind(c(-1,1,0)); t1 <- abs((C1 %*% beta) / sqrt(C1 %*% Sigma %*% t(C1))); 2*(1-pnorm(abs(t1)))
> ## C2 <- rbind(c(-1,0,1)); t2 <- abs((C2 %*% beta) / sqrt(C2 %*% Sigma %*% t(C2))); 2*(1-pnorm(abs(t2)))
> ## C3 <- rbind(c(0,-1,1)); t3 <- abs((C3 %*% beta) / sqrt(C3 %*% Sigma %*% t(C3))); 2*(1-pnorm(abs(t3)))
> 
> 
> ePerf.ccw12.perm <- performanceResample(list(glm0_ccw12 = e.glm0_ccw12, glm_ccw12 = e.glm_ccw12, rf_ccw12 = e.ranger_ccw12), data = dfWR.NP1_ccw12,
+                                        fold.repetition = fold.repetition, fold.size = fold.size, fold.balance = TRUE,
+                                        type.resampling = "permutation", n.resampling = vec.resampling, seed = 10,
+                                        filename = file.path(path.results,"analysis-predictionCC-w12",paste0("iter",iter_sim,"-tempo")))
                                                                               